@model liuyida.Models.Order

@{
    ViewBag.Title = "Create";
}
@section back{
    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-basic btn-sm btn-back" })
}
   @using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "order-form" })) { @Html.AntiForgeryToken()   <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h4>Order</h4>
        <section>
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreationTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreationTime, new { htmlAttributes = new { @class = "form-control", @type = "text", @value = "" } })
                    @Html.ValidationMessageFor(model => model.CreationTime, "", new { @class = "text-danger" })
                </div>
            </div>

            
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </section>
        <h4>Items</h4>
        <section>
            <div class="form-group">
                <label class="control-label col-md-2">Items</label>
                <div class="col-md-10">
                    <table class="products">
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                        </tr>
                        @{ int i = 0; }
                        @foreach (var p in ViewBag.Products)
                        {
                            <tr>
                                <td>
                                    <span>@p.Name</span>
                                </td>
                                <td class="table-center">
                                    <input class="form-control text-box single-line quantity" name="OrderItems[@i].Quantity" product-id="@p.Id" type="text" size="4">
                                    <input name="OrderItems[@i].OrderId" value="0" type="hidden">
                                    <input name="OrderItems[@i].ProductId" value="@p.Id" type="hidden">
                                </td>
                                <td class="table-center">
                                    <span class="price" id="price-@p.Id"></span>
                                    <span class="pricelist" id="pricelist-@p.Id">@p.Price</span>
                                </td>
                            </tr>
                            i += 1;
                        }
                        <tr>
                            <td>
                                <label>Total</label>
                            </td>
                            <td></td>
                            <td class="table-center">
                                <span id="total-price"></span>
                            </td>
                        </tr>
                    </table>

                </div>

            </div>

        </section>
        <h4>Delivery</h4>
        <section>
            <div class="form-group">
                @Html.LabelFor(model => model.DeliveryMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.DeliveryMethod, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DeliveryMethod, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DeliveryFee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeliveryFee, new { htmlAttributes = new { @class = "form-control", @id = "deliveryfee" } })
                    @Html.ValidationMessageFor(model => model.DeliveryFee, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.DeliveryTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeliveryTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeliveryTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>
        </section>
        <h4>Payment</h4>
        <section>
            <div class="form-group">
                @Html.LabelFor(model => model.PaymentMethod, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.PaymentMethod, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaymentMethod, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @id = "discount" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "price" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Paid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Paid, new { htmlAttributes = new { @class = "form-control", @id = "paid" } })
                    @Html.ValidationMessageFor(model => model.Paid, "", new { @class = "text-danger" })
                </div>
            </div>

        </section>
</div>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/order")
}
